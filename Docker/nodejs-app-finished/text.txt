docker --help

docker ps

docker run ---> new container based on image

attached and detached docker

interactive docker start -i -a --->input output

//delete an image
container should be removed first
docker rm container
docker rmi image
docker rm prune

Automatically removed container --rm after docker start

docker cp movedfolder destination

FROM language 
VOLUME
Volumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure and OS of the host machine, volumes are completely managed by Docker.
Volumes have several advantages over bind mounts:

Volumes are easier to back up or migrate than bind mounts.
You can manage volumes using Docker CLI commands or the Docker API.
Volumes work on both Linux and Windows containers.
Volumes can be more safely shared among multiple containers.
Volume drivers let you store volumes on remote hosts or cloud providers, to encrypt the contents of volumes, or to add other functionality.
New volumes can have their content pre-populated by a container.
Volumes on Docker Desktop have much higher performance than bind mounts from Mac and Windows hosts.

Choose the -v or --mount flag
In general, --mount is more explicit and verbose. The biggest difference is that the -v syntax combines all the options together in one field, while the --mount syntax separates them. Here is a comparison of the syntax for each flag.


Just a quick note: If you don't always want to copy and use the full path, you can use these shortcuts:

macOS / Linux: -v $(pwd):/app

Windows: -v "%cd%":/app

I don't use them in the lectures, since I want to show an approach that works for everyone (and I don't want to switch between both all the time), but you can use these shortcuts depending on which OS you are working on to save some typing.


Using nodemon
Change script ---> cmd npm start

anonymous volumes
named volumes
bind amount

dockerignore

docker history image

Using build argument

Building multiple application
 public app to show params

 create container for spas

 cross-container network
 adding data persistence to mongoDB

 Docker compose

 creating a compose file
 docker compose up and down

 adding another container

 ngix container

 adding php container

 lavarel utilities container

 launch only docker compose service

 images and container

 key command

 docker compose

 local and remote

 deployment

